{"version":3,"sources":["webpack:///./src/components/Offerings/index.js","webpack:///./src/components/Testimonials/index.js","webpack:///./src/components/HomePageTemplate/index.js","webpack:///./src/templates/home-page.js"],"names":["Offerings","gridItems","className","map","item","key","image","style","borderRadius","alt","src","text","Testimonials","testimonials","testimonial","id","quote","author","HomePageTemplate","title","heading","description","offerings","meta_title","meta_description","name","content","blurbs","pageQuery","HomePage","frontmatter","data","markdownRemark","Layout"],"mappings":"6LA2BeA,EAxBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,yBAAKC,UAAU,wBACZD,EAAUE,KAAI,SAAAC,GAAI,OACjB,yBAAKC,IAAKD,EAAKE,MAAOJ,UAAU,cAAcK,MAAO,CAAEC,aAAc,QACnE,6BAASN,UAAU,WACjB,uBAAGA,UAAU,qBACX,yBAAKO,IAAI,GAAGC,IAAKN,EAAKE,SAExB,2BAAIF,EAAKO,aCeJC,EAvBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACnB,6BACGA,EAAaV,KAAI,SAACW,EAAaC,GAAd,OAChB,6BAASb,UAAU,UAAUG,IAAKU,GAChC,yBAAKb,UAAU,gBACZY,EAAYE,MACb,6BACA,oCAAUF,EAAYG,eC+DjBC,EAnEU,SAAC,GAAD,IACvBC,EADuB,EACvBA,MACAC,EAFuB,EAEvBA,QACAC,EAHuB,EAGvBA,YACAC,EAJuB,EAIvBA,UACAC,EALuB,EAKvBA,WACAC,EANuB,EAMvBA,iBACAX,EAPuB,EAOvBA,aAPuB,OASvB,6BACE,kBAAC,IAAD,KACE,+BAAQU,GACR,0BAAME,KAAK,cAAcC,QAASF,KAEpC,6BAAStB,UAAU,qCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SACXiB,SAQf,6BAASjB,UAAU,6BACjB,yBAAKA,UAAU,aAEb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,6BACE,wBAAIA,UAAU,sCACXkB,GAEH,2BAAIC,IAEN,kBAAC,EAAD,CAAWpB,UAAWqB,EAAUK,SAChC,wBAAIzB,UAAU,sCAAd,gBACA,kBAAC,EAAD,CAAcW,aAAcA,Y,YChB/Be,GAFEC,UA1BE,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACWC,eAArBF,YAER,OACE,kBAACG,EAAA,EAAD,KACE,kBAAC,EAAD,CACEd,MAAOW,EAAYX,MACnBI,WAAYO,EAAYP,WACxBC,iBAAkBM,EAAYN,iBAC9BJ,QAASU,EAAYV,QACrBC,YAAaS,EAAYT,YACzBC,UAAWQ,EAAYR,UACvBT,aAAciB,EAAYjB,iBAgBZ","file":"component---src-templates-home-page-js-e722bae53780518265c0.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Offerings = ({ gridItems }) => (\n  <div className='columns is-multiline'>\n    {gridItems.map(item => (\n      <div key={item.image} className='column is-6' style={{ borderRadius: '5px' }}>\n        <section className='section'>\n          <p className='has-text-centered'>\n            <img alt='' src={item.image} />\n          </p>\n          <p>{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nOfferings.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default Offerings\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Testimonials = ({ testimonials }) => (\n  <div>\n    {testimonials.map((testimonial, id) => (\n      <article className='message' key={id}>\n        <div className='message-body'>\n          {testimonial.quote}\n          <br />\n          <cite> â€“ {testimonial.author}</cite>\n        </div>\n      </article>\n    ))}\n  </div>\n)\n\nTestimonials.propTypes = {\n  testimonials: PropTypes.arrayOf(\n    PropTypes.shape({\n      quote: PropTypes.string,\n      author: PropTypes.string,\n    })\n  ),\n}\n\nexport default Testimonials\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport Offerings from '../Offerings'\nimport Testimonials from '../Testimonials'\nimport PropTypes from 'prop-types'\n\nconst HomePageTemplate = ({\n  title,\n  heading,\n  description,\n  offerings,\n  meta_title,\n  meta_description,\n  testimonials,\n}) => (\n  <div>\n    <Helmet>\n      <title>{meta_title}</title>\n      <meta name='description' content={meta_description} />\n    </Helmet>\n    <section className='hero is-primary is-bold is-medium'>\n      <div className='hero-body'>\n        <div className='container'>\n          <div className='columns'>\n            <div className='column is-10 is-offset-1'>\n              <div className='section'>\n                <h1 className='title'>\n                  {title}\n                </h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section className='section section--gradient'>\n      <div className='container'>\n\n        <div className='section'>\n          <div className='columns'>\n            <div className='column is-10 is-offset-1'>\n              <div className='content'>\n                <div>\n                  <h3 className='has-text-weight-semibold is-size-2'>\n                    {heading}\n                  </h3>\n                  <p>{description}</p>\n                </div>\n                <Offerings gridItems={offerings.blurbs} />\n                <h2 className='has-text-weight-semibold is-size-2'>Testimonials</h2>\n                <Testimonials testimonials={testimonials} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n)\n\nHomePageTemplate.propTypes = {\n  title: PropTypes.string,\n  meta_title: PropTypes.string,\n  meta_description: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  offerings: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n  testimonials: PropTypes.array,\n\n}\n\nexport default HomePageTemplate\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport HomePageTemplate from '../components/HomePageTemplate'\nimport Layout from '../components/Layout'\n\nconst HomePage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <HomePageTemplate\n        title={frontmatter.title}\n        meta_title={frontmatter.meta_title}\n        meta_description={frontmatter.meta_description}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        offerings={frontmatter.offerings}\n        testimonials={frontmatter.testimonials}\n      />\n    </Layout>\n  )\n}\n\nHomePage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n  query IndexPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        meta_title\n        meta_description\n        heading\n        description\n        offerings {\n          blurbs {\n            image\n            text\n          }\n        }\n        testimonials {\n          author\n          quote\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}