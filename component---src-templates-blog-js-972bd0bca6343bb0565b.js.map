{"version":3,"sources":["webpack:///./src/components/PostCard/index.js","webpack:///./src/templates/blog.js"],"names":["PostCard","posts","className","filter","post","node","frontmatter","templateKey","map","style","border","padding","key","id","to","fields","slug","title","date","excerpt","PaginationLink","props","test","disabled","text","url","BlogPage","render","pageContext","this","group","index","first","last","previousUrl","toString","nextUrl","websiteSchemaOrgJSONLD","config","siteUrl","name","siteTitle","alternateName","siteTitleAlt","Layout","type","JSON","stringify","Component"],"mappings":"8OAmCeA,EAhCE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,yBAAKC,UAAU,aACZD,EACEE,QAAO,SAAAC,GAAI,MAA0C,iBAAtCA,EAAKC,KAAKC,YAAYC,eACrCC,KAAI,gBAASJ,EAAT,EAAGC,KAAH,OACH,yBACEH,UAAU,UACVO,MAAO,CAAEC,OAAQ,oBAAqBC,QAAS,WAC/CC,IAAKR,EAAKS,IAEV,2BACE,kBAAC,OAAD,CAAMX,UAAU,mBAAmBY,GAAIV,EAAKW,OAAOC,MAChDZ,EAAKE,YAAYW,OAEpB,qCACA,+BAAQb,EAAKE,YAAYY,OAE3B,2BACGd,EAAKe,QACN,6BACA,6BACA,kBAAC,OAAD,CAAMjB,UAAU,kBAAkBY,GAAIV,EAAKW,OAAOC,MAAlD,yB,YClBd,IAAMI,EAAiB,SAAAC,GACrB,OAAKA,EAAMC,KAQP,0BAAMC,UAAQ,EAACrB,UAAU,qBACtBmB,EAAMG,MAPT,kBAAC,OAAD,CAAMV,GAAE,SAAWO,EAAMI,IAAOvB,UAAU,qBACvCmB,EAAMG,OAYME,E,gLACnBC,OAAA,WAAW,IACDC,EAAgBC,KAAKR,MAArBO,YACAE,EAA8BF,EAA9BE,MAAOC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KACvBC,EAAcH,EAAQ,GAAM,EAAI,IAAMA,EAAQ,GAAGI,WACjDC,GAAWL,EAAQ,GAAGI,WAAa,IAEnCE,EAAyB,CAC7B,WAAY,oBACZ,QAAS,UACTZ,IAAKa,IAAOC,QACZC,KAAMF,IAAOG,UACbC,cAAeJ,IAAOK,aAAeL,IAAOK,aAAe,IAG7D,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,iEAEA,4BAAQC,KAAK,uBACVC,KAAKC,UAAUV,KAGpB,6BAASnC,UAAU,2BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SAAd,cASZ,6BAASA,UAAU,WACjB,kBAAC,EAAD,CAAUD,MAAO6B,IACjB,6BAAS5B,UAAU,WACjB,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAgBoB,KAAMU,EAAOP,IAAKS,EAAaV,KAAK,kBACpD,kBAAC,EAAD,CAAgBF,KAAMW,EAAMR,IAAKW,EAASZ,KAAK,mB,GA5CvBwB","file":"component---src-templates-blog-js-972bd0bca6343bb0565b.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PostCard = ({ posts }) => {\n  return (\n    <div className='container'>\n      {posts\n        .filter(post => post.node.frontmatter.templateKey === 'article-page')\n        .map(({ node: post }) => (\n          <div\n            className='content'\n            style={{ border: '1px solid #eaecee', padding: '2em 4em' }}\n            key={post.id}\n          >\n            <p>\n              <Link className='has-text-primary' to={post.fields.slug}>\n                {post.frontmatter.title}\n              </Link>\n              <span> &bull; </span>\n              <small>{post.frontmatter.date}</small>\n            </p>\n            <p>\n              {post.excerpt}\n              <br />\n              <br />\n              <Link className='button is-small' to={post.fields.slug}>\n                                Keep Reading â†’\n              </Link>\n            </p>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport default PostCard\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport config from '../../config'\nimport Helmet from 'react-helmet'\nimport PostCard from '../components/PostCard'\nimport Layout from '../components/Layout'\n\nconst PaginationLink = props => {\n  if (!props.test) {\n    return (\n      <Link to={`/blog/${props.url}`} className='button is-rounded'>\n        {props.text}\n      </Link>\n    )\n  } else {\n    return (\n      <span disabled className='button is-rounded'>\n        {props.text}\n      </span>\n    )\n  }\n}\n\nexport default class BlogPage extends Component {\n  render () {\n    const { pageContext } = this.props\n    const { group, index, first, last } = pageContext\n    const previousUrl = index - 1 === 1 ? '' : (index - 1).toString()\n    const nextUrl = (index + 1).toString() + '/'\n\n    const websiteSchemaOrgJSONLD = {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: config.siteUrl,\n      name: config.siteTitle,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    }\n\n    return (\n      <Layout>\n        <Helmet>\n          <title>Blog | Gatsby Starter Business</title>\n          {/* Schema.org tags */}\n          <script type='application/ld+json'>\n            {JSON.stringify(websiteSchemaOrgJSONLD)}\n          </script>\n        </Helmet>\n        <section className='hero is-primary is-bold'>\n          <div className='hero-body'>\n            <div className='container'>\n              <div className='columns'>\n                <div className='column is-10 is-offset-1'>\n                  <div className='section'>\n                    <h1 className='title'>\n                      Blog\n                    </h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className='section'>\n          <PostCard posts={group} />\n          <section className='section'>\n            <div className='buttons is-centered'>\n              <PaginationLink test={first} url={previousUrl} text='Previous Page' />\n              <PaginationLink test={last} url={nextUrl} text='Next Page' />\n            </div>\n          </section>\n        </section>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}